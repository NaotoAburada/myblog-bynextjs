{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\workspace_nextjs\\\\myblog-bynextjs\\\\pages\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Container from \"../components/container\";\nimport ArticleList from \"../components/article-list\";\nimport Intro from \"../components/intro\";\nimport Layout from \"../components/layout\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../lib/constants\";\n\n//const Index: React.FC = ({}) => {\nvar Index = function Index(_ref) {\n  var allPosts = _ref.allPosts;\n\n  /*\n  const cmsurl = \"https://myblog-nextjs.microcms.io/api/v1/blog\";\n   // API呼び出しの準備\n  const fetcher = () =>\n    fetch(cmsurl, {\n      method: \"GET\",\n      headers: {\n        \"X-API-KEY\": \"c2bf30d3-1da2-45a3-8327-b992b9006af3\",\n      },\n    }).then((res) => res.json());\n   // SWRを使用してのAPI呼び出し\n  const { data, error } = useSWR<CMS, {}>(cmsurl, fetcher);\n   if (error) return <div>error</div>;\n  if (!data) return <div>loading...</div>;\n   const articleList = data.contents.reverse();\n  */\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Next.js Blog Example with \", CMS_NAME)), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(Intro, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), __jsx(\"h2\", {\n    className: \"mb-8 text-6xl md:text-7xl font-bold tracking-tighter leading-tight\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Article List\"), allPosts.length, __jsx(ArticleList, {\n    posts: allPosts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))));\n}; //{allPosts.length > 0 && <ArticleList posts={allPosts} />}\n\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n/*\nexport const getStaticProps = async () => {\n  const allPosts = getAllPosts([\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"coverImage\",\n    \"excerpt\",\n  ]);\n\n  return {\n    props: { allPosts },\n  };\n};\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/workspace_nextjs/myblog-bynextjs/pages/index.tsx"],"names":["React","Container","ArticleList","Intro","Layout","Head","CMS_NAME","Index","allPosts","length"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AASA;AACA,IAAMC,KAAsB,GAAG,SAAzBA,KAAyB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC/C;;;;;;;;;;;;;;;;AAqBA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAkCF,QAAlC,CADF,CADF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,SAAS,EAAC,oEAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAKGE,QAAQ,CAACC,MALZ,EAME,MAAC,WAAD;AAAa,IAAA,KAAK,EAAED,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAJF,CADF,CADF;AAiBD,CAvCD,C,CAwCA;;;KAxCMD,K;;AA0CN,eAAeA,KAAf;AAwBA","sourcesContent":["import React from \"react\";\nimport Container from \"../components/container\";\nimport ArticleList from \"../components/article-list\";\nimport HeroPost from \"../components/hero-post\";\nimport Intro from \"../components/intro\";\nimport Layout from \"../components/layout\";\nimport { getAllPosts } from \"../lib/api\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../lib/constants\";\nimport Post from \"../types/post\";\nimport useSWR from \"swr\";\nimport CMS from \"../types/cms\";\n\ntype Props = {\n  allPosts: Post[];\n};\n\n//const Index: React.FC = ({}) => {\nconst Index: React.FC<Props> = ({ allPosts }) => {\n  /*\n  const cmsurl = \"https://myblog-nextjs.microcms.io/api/v1/blog\";\n\n  // API呼び出しの準備\n  const fetcher = () =>\n    fetch(cmsurl, {\n      method: \"GET\",\n      headers: {\n        \"X-API-KEY\": \"c2bf30d3-1da2-45a3-8327-b992b9006af3\",\n      },\n    }).then((res) => res.json());\n\n  // SWRを使用してのAPI呼び出し\n  const { data, error } = useSWR<CMS, {}>(cmsurl, fetcher);\n\n  if (error) return <div>error</div>;\n  if (!data) return <div>loading...</div>;\n\n  const articleList = data.contents.reverse();\n*/\n\n  return (\n    <>\n      <Layout>\n        <Head>\n          <title>Next.js Blog Example with {CMS_NAME}</title>\n        </Head>\n        <Container>\n          <Intro />\n          <h2 className=\"mb-8 text-6xl md:text-7xl font-bold tracking-tighter leading-tight\">\n            Article List\n          </h2>\n          {allPosts.length}\n          <ArticleList posts={allPosts} />\n        </Container>\n      </Layout>\n    </>\n  );\n};\n//{allPosts.length > 0 && <ArticleList posts={allPosts} />}\n\nexport default Index;\n\nexport async function getStaticProps() {\n  const cmsurl = \"https://myblog-nextjs.microcms.io/api/v1/blog\";\n\n  const res = await fetch(cmsurl, {\n    method: \"GET\",\n    headers: {\n      \"X-API-KEY\": \"c2bf30d3-1da2-45a3-8327-b992b9006af3\",\n    },\n  });\n  const posts = await res.json();\n\n  const articleList = posts.contents;\n  /*\n  const paths = articleList.map(\n    (article: PostType) => `/posts/${article.id.toString}`\n  );\n*/\n  return {\n    props: { allPosts: articleList },\n  };\n}\n\n/*\nexport const getStaticProps = async () => {\n  const allPosts = getAllPosts([\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"coverImage\",\n    \"excerpt\",\n  ]);\n\n  return {\n    props: { allPosts },\n  };\n};\n*/\n"]},"metadata":{},"sourceType":"module"}