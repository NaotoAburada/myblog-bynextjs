{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace_nextjs\\\\myblog-bynextjs\\\\pages\\\\posts\\\\[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Container from \"../../components/container\";\nimport PostBody from \"../../components/post-body\";\nimport Header from \"../../components/header\";\nimport PostHeader from \"../../components/post-header\";\nimport PreviousArticle from \"../../components/previous-article\";\nimport BackArticle from \"../../components/back-article\";\nimport Layout from \"../../components/layout\";\nimport { getAllPosts } from \"../../lib/api\";\nimport PostTitle from \"../../components/post-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\nimport useSWR from \"swr\";\n\nconst Post = ({\n  post,\n  morePosts,\n  preview\n}) => {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n  let linkpostpre = -1;\n  let linkpostback = morePosts.length;\n\n  for (let i = 0; i < morePosts.length; i++) {\n    if ((post === null || post === void 0 ? void 0 : post.slug) === morePosts[i].slug) {\n      if (i !== 0) {\n        linkpostpre = i - 1;\n      }\n\n      linkpostback = i + 1;\n    }\n  }\n\n  return __jsx(Layout, {\n    preview: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), router.isFallback ? __jsx(PostTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"mb-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, post.title, \" | Next.js Blog Example with \", CMS_NAME)), __jsx(PostHeader, {\n    title: post.title,\n    date: post.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), __jsx(PostBody, {\n    content: post.blogtext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, linkpostpre === -1 ? __jsx(PreviousArticle, {\n    post: morePosts[linkpostpre],\n    linknumber: linkpostpre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }) : __jsx(PreviousArticle, {\n    post: morePosts[linkpostpre],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }), linkpostback === morePosts.length ? __jsx(BackArticle, {\n    post: morePosts[linkpostpre],\n    linknumber: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }) : __jsx(BackArticle, {\n    post: morePosts[linkpostback],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }))))));\n};\n\nexport default Post;\nexport async function getStaticProps({\n  params\n}) {\n  return {\n    props: {\n      post: params.post,\n      morePosts: params.morePosts\n    }\n  };\n  /*\n  const post = getPostBySlug(params.slug, [\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"content\",\n    \"ogImage\",\n    \"coverImage\",\n  ]);\n   const content = await markdownToHtml(post.content || \"\");\n   const allPosts = getAllPosts([\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"coverImage\",\n    \"excerpt\",\n  ]);\n   return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n      morePosts: allPosts,\n    },\n  };\n  */\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts([\"slug\"]);\n  const cmsurl = \"https://myblog-nextjs.microcms.io/api/v1/blog\";\n  const fetcher = await fetch(cmsurl, {\n    method: \"GET\",\n    headers: {\n      \"X-API-KEY\": \"c2bf30d3-1da2-45a3-8327-b992b9006af3\"\n    }\n  }).then(res => res.json()); // SWRを使用してのAPI呼び出し\n\n  const {\n    data,\n    error\n  } = useSWR(cmsurl, fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"error\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, \"loading...\");\n  const articleList = data.contents.reverse();\n  const post = articleList[0];\n  const allPosts = articleList.slice(1);\n  const content = await markdownToHtml(post.blogtext || \"\");\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      }),\n      morePosts: allPosts\n    }\n  };\n  /*\n  return {\n    paths: articleList.map((articleList) => {\n      return {\n        params: {\n          slug: articleList.id,\n        },\n      };\n    }),\n    fallback: false,\n  };\n  */\n}","map":{"version":3,"sources":["D:/workspace_nextjs/myblog-bynextjs/pages/posts/[id].tsx"],"names":["React","useRouter","ErrorPage","Container","PostBody","Header","PostHeader","PreviousArticle","BackArticle","Layout","getAllPosts","PostTitle","Head","CMS_NAME","markdownToHtml","useSWR","Post","post","morePosts","preview","router","isFallback","slug","linkpostpre","linkpostback","length","i","title","date","blogtext","getStaticProps","params","props","getStaticPaths","posts","cmsurl","fetcher","fetch","method","headers","then","res","json","data","error","articleList","contents","reverse","allPosts","slice","content"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Container from \"../../components/container\";\nimport PostBody from \"../../components/post-body\";\nimport Header from \"../../components/header\";\nimport PostHeader from \"../../components/post-header\";\nimport PreviousArticle from \"../../components/previous-article\";\nimport BackArticle from \"../../components/back-article\";\nimport Layout from \"../../components/layout\";\nimport { getPostBySlug, getAllPosts } from \"../../lib/api\";\nimport PostTitle from \"../../components/post-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\nimport PostType from \"../../types/post\";\nimport useSWR from \"swr\";\nimport CMS from \"../../types/cms\";\n\ntype Props = {\n  post: PostType;\n  morePosts: PostType[];\n  preview?: boolean;\n};\n\nconst Post: React.FC<Props> = ({ post, morePosts, preview }) => {\n  const router = useRouter();\n\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />;\n  }\n\n  let linkpostpre = -1;\n  let linkpostback = morePosts.length;\n  for (let i = 0; i < morePosts.length; i++) {\n    if (post?.slug === morePosts[i].slug) {\n      if (i !== 0) {\n        linkpostpre = i - 1;\n      }\n      linkpostback = i + 1;\n    }\n  }\n\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <PostTitle>Loading…</PostTitle>\n        ) : (\n          <>\n            <article className=\"mb-32\">\n              <Head>\n                <title>\n                  {post.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n              </Head>\n              <PostHeader title={post.title} date={post.date} />\n              <PostBody content={post.blogtext} />\n              <div className=\"flex\">\n                {linkpostpre === -1 ? (\n                  <PreviousArticle\n                    post={morePosts[linkpostpre]}\n                    linknumber={linkpostpre}\n                  />\n                ) : (\n                  <PreviousArticle post={morePosts[linkpostpre]} />\n                )}\n                {linkpostback === morePosts.length ? (\n                  <BackArticle post={morePosts[linkpostpre]} linknumber={0} />\n                ) : (\n                  <BackArticle post={morePosts[linkpostback]} />\n                )}\n              </div>\n            </article>\n          </>\n        )}\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Post;\n\ntype Params = {\n  post: PostType;\n  morePosts: PostType[];\n  preview?: boolean;\n  //  params: {\n  //    slug: string;\n  //  };\n};\n\nexport async function getStaticProps({ params }: Params) {\n  return {\n    props: {\n      post: params.post,\n      morePosts: params.morePosts,\n    },\n  };\n\n  /*\n  const post = getPostBySlug(params.slug, [\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"content\",\n    \"ogImage\",\n    \"coverImage\",\n  ]);\n\n  const content = await markdownToHtml(post.content || \"\");\n\n  const allPosts = getAllPosts([\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"coverImage\",\n    \"excerpt\",\n  ]);\n\n  return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n      morePosts: allPosts,\n    },\n  };\n*/\n}\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts([\"slug\"]);\n\n  const cmsurl = \"https://myblog-nextjs.microcms.io/api/v1/blog\";\n\n  const fetcher = await fetch(cmsurl, {\n    method: \"GET\",\n    headers: {\n      \"X-API-KEY\": \"c2bf30d3-1da2-45a3-8327-b992b9006af3\",\n    },\n  }).then((res) => res.json());\n\n  // SWRを使用してのAPI呼び出し\n  const { data, error } = useSWR<CMS, {}>(cmsurl, fetcher);\n\n  if (error) return <div>error</div>;\n  if (!data) return <div>loading...</div>;\n\n  const articleList = data.contents.reverse();\n  const post = articleList[0];\n  const allPosts = articleList.slice(1);\n\n  const content = await markdownToHtml(post.blogtext || \"\");\n\n  return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n      morePosts: allPosts,\n    },\n  };\n\n  /*\n  return {\n    paths: articleList.map((articleList) => {\n      return {\n        params: {\n          slug: articleList.id,\n        },\n      };\n    }),\n    fallback: false,\n  };\n*/\n}\n"]},"metadata":{},"sourceType":"module"}