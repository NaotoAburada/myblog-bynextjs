{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\workspace_nextjs\\\\myblog-bynextjs\\\\pages\\\\posts\\\\[slug].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Container from \"../../components/container\";\nimport PostBody from \"../../components/post-body\";\nimport Header from \"../../components/header\";\nimport PostHeader from \"../../components/post-header\";\nimport PreviousArticle from \"../../components/previous-article\";\nimport BackArticle from \"../../components/back-article\";\nimport Layout from \"../../components/layout\";\nimport PostTitle from \"../../components/post-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport useSWR from \"swr\";\n\nvar Post = function Post(_ref) {\n  _s();\n\n  var post = _ref.post,\n      morePosts = _ref.morePosts,\n      preview = _ref.preview;\n  var router = useRouter();\n  var cmsurl = \"https://myblog-nextjs.microcms.io/api/v1/blog\";\n\n  var fetcher = function fetcher() {\n    return fetch(cmsurl, {\n      method: \"GET\",\n      headers: {\n        \"X-API-KEY\": \"c2bf30d3-1da2-45a3-8327-b992b9006af3\"\n      }\n    }).then(function (res) {\n      return res.json();\n    });\n  }; // SWRを使用してのAPI呼び出し\n\n\n  var _useSWR = useSWR(cmsurl, fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n  /*\n  const fetcher = (\n    url : string\n  ) => fetch(\"https://api.github.com/users/facebook/repos\").then(res => res.json());\n  const {data, error} = useSWR(\"https://api.github.com/users/facebook/repos\", fetcher)\n  */\n\n\n  if (error) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"error\");\n  if (!data) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"loading...\");\n  var articleList = data.contents.reverse();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.id)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    });\n  }\n\n  var linkpostpre = -1;\n  var linkpostback = morePosts.length;\n\n  for (var i = 0; i < morePosts.length; i++) {\n    if ((post === null || post === void 0 ? void 0 : post.slug) === morePosts[i].slug) {\n      if (i !== 0) {\n        linkpostpre = i - 1;\n      }\n\n      linkpostback = i + 1;\n    }\n  }\n\n  return __jsx(Layout, {\n    preview: preview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), router.isFallback ? __jsx(PostTitle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"mb-32\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, post.title, \" | Next.js Blog Example with \", CMS_NAME), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: post.ogImage.url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), __jsx(PostHeader, {\n    title: post.title,\n    coverImage: post.coverImage,\n    date: post.date,\n    author: post.author,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }), __jsx(PostBody, {\n    content: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, linkpostpre === -1 ? __jsx(PreviousArticle, {\n    post: morePosts[linkpostpre],\n    linknumber: linkpostpre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }) : __jsx(PreviousArticle, {\n    post: morePosts[linkpostpre],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }), linkpostback === morePosts.length ? __jsx(BackArticle, {\n    post: morePosts[linkpostpre],\n    linknumber: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }) : __jsx(BackArticle, {\n    post: morePosts[linkpostback],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }))))));\n};\n\n_s(Post, \"F2OQGCTB9lgwThKfzWI7sczFgbA=\", false, function () {\n  return [useRouter, useSWR];\n});\n\n_c = Post;\nexport var __N_SSG = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/workspace_nextjs/myblog-bynextjs/pages/posts/[slug].tsx"],"names":["React","useRouter","ErrorPage","Container","PostBody","Header","PostHeader","PreviousArticle","BackArticle","Layout","PostTitle","Head","CMS_NAME","useSWR","Post","post","morePosts","preview","router","cmsurl","fetcher","fetch","method","headers","then","res","json","data","error","articleList","contents","reverse","isFallback","id","linkpostpre","linkpostback","length","i","slug","title","ogImage","url","coverImage","date","author","content"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport ErrorPage from \"next/error\";\nimport Container from \"../../components/container\";\nimport PostBody from \"../../components/post-body\";\nimport Header from \"../../components/header\";\nimport PostHeader from \"../../components/post-header\";\nimport PreviousArticle from \"../../components/previous-article\";\nimport BackArticle from \"../../components/back-article\";\nimport Layout from \"../../components/layout\";\nimport { getPostBySlug, getAllPosts } from \"../../lib/api\";\nimport PostTitle from \"../../components/post-title\";\nimport Head from \"next/head\";\nimport { CMS_NAME } from \"../../lib/constants\";\nimport markdownToHtml from \"../../lib/markdownToHtml\";\nimport PostType from \"../../types/post\";\nimport useSWR from \"swr\";\nimport CMS from \"../../types/cms\";\n\ntype Props = {\n  post: PostType;\n  morePosts: PostType[];\n  preview?: boolean;\n};\n\nconst Post: React.FC<Props> = ({ post, morePosts, preview }) => {\n  const router = useRouter();\n\n  const cmsurl = \"https://myblog-nextjs.microcms.io/api/v1/blog\";\n\n  const fetcher = () =>\n    fetch(cmsurl, {\n      method: \"GET\",\n      headers: {\n        \"X-API-KEY\": \"c2bf30d3-1da2-45a3-8327-b992b9006af3\",\n      },\n    }).then((res) => res.json());\n\n  // SWRを使用してのAPI呼び出し\n  const { data, error } = useSWR<CMS, {}>(cmsurl, fetcher);\n\n  /*\n  const fetcher = (\n    url : string\n  ) => fetch(\"https://api.github.com/users/facebook/repos\").then(res => res.json());\n  const {data, error} = useSWR(\"https://api.github.com/users/facebook/repos\", fetcher)\n*/\n  if (error) return <div>error</div>;\n  if (!data) return <div>loading...</div>;\n\n  const articleList = data.contents.reverse();\n\n  if (!router.isFallback && !post?.id) {\n    return <ErrorPage statusCode={404} />;\n  }\n\n  let linkpostpre = -1;\n  let linkpostback = morePosts.length;\n  for (let i = 0; i < morePosts.length; i++) {\n    if (post?.slug === morePosts[i].slug) {\n      if (i !== 0) {\n        linkpostpre = i - 1;\n      }\n      linkpostback = i + 1;\n    }\n  }\n\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <PostTitle>Loading…</PostTitle>\n        ) : (\n          <>\n            <article className=\"mb-32\">\n              <Head>\n                <title>\n                  {post.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n                <meta property=\"og:image\" content={post.ogImage.url} />\n              </Head>\n              <PostHeader\n                title={post.title}\n                coverImage={post.coverImage}\n                date={post.date}\n                author={post.author}\n              />\n              <PostBody content={post.content} />\n              <div className=\"flex\">\n                {linkpostpre === -1 ? (\n                  <PreviousArticle\n                    post={morePosts[linkpostpre]}\n                    linknumber={linkpostpre}\n                  />\n                ) : (\n                  <PreviousArticle post={morePosts[linkpostpre]} />\n                )}\n                {linkpostback === morePosts.length ? (\n                  <BackArticle post={morePosts[linkpostpre]} linknumber={0} />\n                ) : (\n                  <BackArticle post={morePosts[linkpostback]} />\n                )}\n              </div>\n            </article>\n          </>\n        )}\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Post;\n\ntype Params = {\n  params: {\n    slug: string;\n  };\n};\n\nexport async function getStaticProps({ params }: Params) {\n  const post = getPostBySlug(params.slug, [\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"content\",\n    \"ogImage\",\n    \"coverImage\",\n  ]);\n\n  const content = await markdownToHtml(post.content || \"\");\n\n  const allPosts = getAllPosts([\n    \"title\",\n    \"date\",\n    \"slug\",\n    \"author\",\n    \"coverImage\",\n    \"excerpt\",\n  ]);\n\n  return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n      morePosts: allPosts,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts([\"slug\"]);\n\n  return {\n    paths: posts.map((posts) => {\n      return {\n        params: {\n          slug: posts.slug,\n        },\n      };\n    }),\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}