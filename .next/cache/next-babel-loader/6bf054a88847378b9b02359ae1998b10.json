{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace_nextjs\\\\myblog-bynextjs\\\\pages\\\\posts\\\\[slug].tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport ErrorPage from 'next/error';\nimport Container from '../../components/container';\nimport PostBody from '../../components/post-body';\nimport Header from '../../components/header';\nimport PostHeader from '../../components/post-header';\nimport Layout from '../../components/layout';\nimport { getPostBySlug, getAllPosts } from '../../lib/api';\nimport PostTitle from '../../components/post-title';\nimport Head from 'next/head';\nimport { CMS_NAME } from '../../lib/constants';\nimport markdownToHtml from '../../lib/markdownToHtml';\n\nconst Post = ({\n  post,\n  morePosts,\n  preview\n}) => {\n  const router = useRouter();\n\n  if (!router.isFallback && !(post === null || post === void 0 ? void 0 : post.slug)) {\n    return __jsx(ErrorPage, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 12\n      }\n    });\n  } //  let previousArticle = post\n\n\n  let linkpostpre = -1;\n\n  for (let i = 0; i < morePosts.length; i++) {\n    if ((post === null || post === void 0 ? void 0 : post.slug) == morePosts[i].slug) {\n      linkpostpre = i;\n    }\n  } //  previousArticle = morePosts[linkpostpre + 1]\n\n\n  return __jsx(Layout, {\n    preview: preview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), router.isFallback ? __jsx(PostTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Loading\\u2026\") : __jsx(React.Fragment, null, __jsx(\"article\", {\n    className: \"mb-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, post.title, \" | Next.js Blog Example with \", CMS_NAME), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: post.ogImage.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  })), __jsx(PostHeader, {\n    title: post.title,\n    coverImage: post.coverImage,\n    date: post.date,\n    author: post.author,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), __jsx(PostBody, {\n    content: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, morePosts[0].slug, morePosts[0].coverImage, morePosts[0].date, morePosts[0].slug, morePosts[0].excerpt, morePosts[0].author)))));\n};\n\nexport default Post;\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, ['title', 'date', 'slug', 'author', 'content', 'ogImage', 'coverImage']);\n  const content = await markdownToHtml(post.content || '');\n  const allPosts = getAllPosts(['title', 'date', 'slug', 'author', 'coverImage', 'excerpt']);\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      }),\n      morePosts: allPosts\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n  return {\n    paths: posts.map(posts => {\n      return {\n        params: {\n          slug: posts.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["D:/workspace_nextjs/myblog-bynextjs/pages/posts/[slug].tsx"],"names":["React","useRouter","ErrorPage","Container","PostBody","Header","PostHeader","Layout","getPostBySlug","getAllPosts","PostTitle","Head","CMS_NAME","markdownToHtml","Post","post","morePosts","preview","router","isFallback","slug","linkpostpre","i","length","title","ogImage","url","coverImage","date","author","content","excerpt","getStaticProps","params","allPosts","props","getStaticPaths","posts","paths","map","fallback"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useRouter } from 'next/router'\nimport ErrorPage from 'next/error'\nimport Container from '../../components/container'\nimport PostBody from '../../components/post-body'\nimport Header from '../../components/header'\nimport PostHeader from '../../components/post-header'\nimport PreviousArticle from '../../components/previous-article'\nimport Layout from '../../components/layout'\nimport { getPostBySlug, getAllPosts } from '../../lib/api'\nimport PostTitle from '../../components/post-title'\nimport Head from 'next/head'\nimport { CMS_NAME } from '../../lib/constants'\nimport markdownToHtml from '../../lib/markdownToHtml'\nimport PostType from '../../types/post'\n\ntype Props = {\n  post: PostType\n  morePosts: PostType[]\n  preview?: boolean\n}\n\nconst Post: React.FC<Props> = ({ post, morePosts, preview }) => {\n  const router = useRouter()\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />\n  }\n\n//  let previousArticle = post\n  let linkpostpre = -1\n\n  for (let i = 0; i < morePosts.length; i++) {\n    if (post?.slug == morePosts[i].slug) {\n      linkpostpre = i\n    }\n  }\n//  previousArticle = morePosts[linkpostpre + 1]\n\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <PostTitle>Loading…</PostTitle>\n        ) : (\n          <>\n            <article className=\"mb-32\">\n              <Head>\n                <title>\n                  {post.title} | Next.js Blog Example with {CMS_NAME}\n                </title>\n                <meta property=\"og:image\" content={post.ogImage.url} />\n              </Head>\n              <PostHeader\n                title={post.title}\n                coverImage={post.coverImage}\n                date={post.date}\n                author={post.author}\n              />\n              <PostBody content={post.content} />\n              <div>\n                {morePosts[0].slug}\n                {morePosts[0].coverImage}\n                {morePosts[0].date}\n                {morePosts[0].slug}\n                {morePosts[0].excerpt}\n                {morePosts[0].author}\n            </div>\n            </article>\n          </>\n        )}\n      </Container>\n    </Layout>\n  )\n}\n\nexport default Post\n\ntype Params = {\n  params: {\n    slug: string\n  }\n}\n\nexport async function getStaticProps({ params }: Params) {\n  const post = getPostBySlug(params.slug, [\n    'title',\n    'date',\n    'slug',\n    'author',\n    'content',\n    'ogImage',\n    'coverImage',\n  ])\n\n  const content = await markdownToHtml(post.content || '')\n\n  const allPosts = getAllPosts([\n    'title',\n    'date',\n    'slug',\n    'author',\n    'coverImage',\n    'excerpt',\n  ])\n\n  return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n      morePosts: allPosts, \n    },\n  }\n}\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug'])\n\n  return {\n    paths: posts.map((posts) => {\n      return {\n        params: {\n          slug: posts.slug,\n        },\n      }\n    }),\n    fallback: false,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}