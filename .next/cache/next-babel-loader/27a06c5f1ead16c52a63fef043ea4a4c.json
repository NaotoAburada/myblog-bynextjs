{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\workspace_nextjs\\\\myblog-bynextjs\\\\pages\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Container from '../components/container';\nimport MoreStories from '../components/more-stories';\nimport HeroPost from '../components/hero-post';\nimport Intro from '../components/intro';\nimport Layout from '../components/layout';\nimport Head from 'next/head';\nimport { CMS_NAME } from '../lib/constants';\nimport useSWR from 'swr';\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var allPosts = _ref.allPosts;\n  var heroPost = allPosts[0];\n  var morePosts = allPosts.slice(1);\n  var cmsurl = 'https://myblog-nextjs.microcms.io/api/v1/blog';\n\n  var fetcher = function fetcher(contents, totalCount, offset, limit) {\n    return fetch(cmsurl, {\n      method: 'GET',\n      headers: {\n        'X-API-KEY': 'c2bf30d3-1da2-45a3-8327-b992b9006af3'\n      }\n    }).then(function (res) {\n      return res.json();\n    });\n  };\n\n  var _useSWR = useSWR(cmsurl, fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n  /*\n    const fetcher = (\n      url : string\n    ) => fetch(\"https://api.github.com/users/facebook/repos\").then(res => res.json());\n    const {data, error} = useSWR(\"https://api.github.com/users/facebook/repos\", fetcher)\n  */\n\n\n  if (error) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"error\");\n  if (!data) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"loading...\");\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Next.js Blog Example with \", CMS_NAME)), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(Intro, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), heroPost && __jsx(HeroPost, {\n    title: heroPost.title,\n    coverImage: heroPost.coverImage,\n    date: heroPost.date,\n    author: heroPost.author,\n    slug: heroPost.slug,\n    excerpt: heroPost.excerpt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), morePosts.length > 0 && __jsx(MoreStories, {\n    posts: morePosts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 36\n    }\n  })), data.totalCount));\n};\n\n_s(Index, \"PLUSh3GLacfZJClYQJks7Deieck=\", false, function () {\n  return [useSWR];\n});\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/workspace_nextjs/myblog-bynextjs/pages/index.tsx"],"names":["React","Container","MoreStories","HeroPost","Intro","Layout","Head","CMS_NAME","useSWR","Index","allPosts","heroPost","morePosts","slice","cmsurl","fetcher","contents","totalCount","offset","limit","fetch","method","headers","then","res","json","data","error","title","coverImage","date","author","slug","excerpt","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAOC,MAAP,MAAmB,KAAnB;;AAMA,IAAMC,KAAsB,GAAG,SAAzBA,KAAyB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC/C,MAAMC,QAAQ,GAAGD,QAAQ,CAAC,CAAD,CAAzB;AACA,MAAME,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAe,CAAf,CAAlB;AAEA,MAAMC,MAAM,GAAG,+CAAf;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAYfC,QAZe,EAsBfC,UAtBe,EAuBfC,MAvBe,EAwBfC,KAxBe;AAAA,WAwBGC,KAAK,CAACN,MAAD,EAAS;AAC3BO,MAAAA,MAAM,EAAE,KADmB;AAE3BC,MAAAA,OAAO,EAAE;AACP,qBAAa;AADN;AAFkB,KAAT,CAAL,CAKZC,IALY,CAKP,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KALI,CAxBH;AAAA,GAAhB;;AAN+C,gBAqCzBjB,MAAM,CAACM,MAAD,EAASC,OAAT,CArCmB;AAAA,MAqCxCW,IArCwC,WAqCxCA,IArCwC;AAAA,MAqClCC,KArCkC,WAqClCA,KArCkC;AAuCjD;;;;;;;;AAME,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAkCnB,QAAlC,CADF,CADF,EAIE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGI,QAAQ,IACP,MAAC,QAAD;AACE,IAAA,KAAK,EAAEA,QAAQ,CAACiB,KADlB;AAEE,IAAA,UAAU,EAAEjB,QAAQ,CAACkB,UAFvB;AAGE,IAAA,IAAI,EAAElB,QAAQ,CAACmB,IAHjB;AAIE,IAAA,MAAM,EAAEnB,QAAQ,CAACoB,MAJnB;AAKE,IAAA,IAAI,EAAEpB,QAAQ,CAACqB,IALjB;AAME,IAAA,OAAO,EAAErB,QAAQ,CAACsB,OANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAYGrB,SAAS,CAACsB,MAAV,GAAmB,CAAnB,IAAwB,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEtB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZ3B,CAJF,EAkBGc,IAAI,CAACT,UAlBR,CADF,CADF;AAwBD,CAxED;;GAAMR,K;UAqCkBD,M;;;KArClBC,K;;AA0EN,eAAeA,KAAf","sourcesContent":["import React from 'react'\nimport Container from '../components/container'\nimport MoreStories from '../components/more-stories'\nimport HeroPost from '../components/hero-post'\nimport Intro from '../components/intro'\nimport Layout from '../components/layout'\nimport { getAllPosts } from '../lib/api'\nimport Head from 'next/head'\nimport { CMS_NAME } from '../lib/constants'\nimport Post from '../types/post'\nimport useSWR from 'swr'\n\ntype Props = {\n  allPosts: Post[]\n}\n\nconst Index: React.FC<Props> = ({ allPosts }) => {\n  const heroPost = allPosts[0]\n  const morePosts = allPosts.slice(1)\n\n  const cmsurl = 'https://myblog-nextjs.microcms.io/api/v1/blog'\n\n  const fetcher = (\n/*    contents: {\n      id: string,\n      createdAt: string,\n      updatedAt: string,\n      title: string,\n      excerpt: string,\n      date: string,\n      slug: string,\n      blogtext: string,\n    }[]\n    */\n   contents: [{\n    id: string,\n    createdAt: string,\n    updatedAt: string,\n    title: string,\n    excerpt: string,\n    date: string,\n    slug: string,\n    blogtext: string,\n   }],\n   totalCount: string,\n   offset : string,\n   limit: string) => fetch(cmsurl, {\n        method: 'GET',\n        headers: {\n          'X-API-KEY': 'c2bf30d3-1da2-45a3-8327-b992b9006af3'\n        }\n      }).then(res => res.json());\n\n  const {data, error} = useSWR(cmsurl, fetcher)\n\n/*\n  const fetcher = (\n    url : string\n  ) => fetch(\"https://api.github.com/users/facebook/repos\").then(res => res.json());\n  const {data, error} = useSWR(\"https://api.github.com/users/facebook/repos\", fetcher)\n*/\n  if (error) return <div>error</div>\n  if (!data) return <div>loading...</div>\n\n  return (\n    <>\n      <Layout>\n        <Head>\n          <title>Next.js Blog Example with {CMS_NAME}</title>\n        </Head>\n        <Container>\n          <Intro />\n          {heroPost && (\n            <HeroPost\n              title={heroPost.title}\n              coverImage={heroPost.coverImage}\n              date={heroPost.date}\n              author={heroPost.author}\n              slug={heroPost.slug}\n              excerpt={heroPost.excerpt}\n            />\n          )}\n          {morePosts.length > 0 && <MoreStories posts={morePosts} />}\n        </Container>\n        {data.totalCount}\n      </Layout>\n    </>\n  )\n}\n\nexport default Index\n\nexport const getStaticProps = async () => {\n  const allPosts = getAllPosts([\n    'title',\n    'date',\n    'slug',\n    'author',\n    'coverImage',\n    'excerpt',\n  ])\n\n  return {\n    props: { allPosts },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}